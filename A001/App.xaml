<Application x:Class="A001.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        
        <RadialGradientBrush x:Key="myBrush">
            <GradientStop Color="#FFC44EC4" Offset="0" />
            <GradientStop Color="#FF829CEB" Offset="1" />
            <GradientStop Color="#FF793879" Offset="0.669" />
        </RadialGradientBrush>



        <Style x:Key ="BasicControlStyle">
            <Setter Property = "Control.FontSize" Value ="14"/>
            <Setter Property = "Control.Height" Value = "40"/>
            <Setter Property = "Control.Cursor" Value = "Hand"/>
        </Style>


        <Style x:Key ="BigGreenButton" TargetType="Button">
            <Setter Property = "FontSize" Value ="20"/>
            <Setter Property = "Height" Value = "100"/>
            <Setter Property = "Width" Value = "100"/>
            <Setter Property = "Background" Value = "DarkGreen"/>
            <Setter Property = "Foreground" Value = "Yellow"/>
        </Style>

        <!-- This style is based on BigGreenButton. -->
        <Style x:Key ="TiltButton" TargetType="Button" BasedOn = "{StaticResource BigGreenButton}">
            <Setter Property = "Foreground" Value = "White"/>
            <Setter Property = "RenderTransform">
                <Setter.Value>
                    <RotateTransform Angle = "20"/>
                </Setter.Value>
            </Setter>
        </Style>





        <ControlTemplate x:Key="RoundButtonTemplate" TargetType="Button" >
            <Grid x:Name="controlLayout">
                <Ellipse x:Name="buttonSurface"  Fill="{TemplateBinding Background}"/>
                <Label x:Name="buttonCaption" Content="{TemplateBinding Content}"
           FontSize="20" FontWeight="Bold"
           HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property = "IsMouseOver" Value = "True">
                    <Setter TargetName = "buttonSurface" Property = "Fill" Value = "Blue"/>
                    <Setter TargetName = "buttonCaption" Property = "Foreground"
                Value = "Yellow"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>





        <Style x:Key ="StyleWithTemplate" TargetType="Button">
            <Setter Property = "FontSize" Value ="20"/>
            <Setter Property = "Height" Value = "100"/>
            <Setter Property = "Width" Value = "100"/>
            <Setter Property = "Background" Value = "DarkGreen"/>
            <Setter Property = "Foreground" Value = "Yellow"/>
            <!-- Here is the template! -->
            <Setter Property ="Template">
                <Setter.Value>
                    <ControlTemplate TargetType ="Button">
                        <Grid x:Name="controlLayout">
                            <Ellipse x:Name="buttonSurface" Fill="{TemplateBinding Background}"/>
                            <Label x:Name="buttonCaption" Content ="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property = "IsMouseOver" Value = "True">
                                <Setter TargetName = "buttonSurface" Property = "Fill" Value = "Blue"/>
                                <Setter TargetName = "buttonCaption" Property = "Foreground" Value = "Yellow"/>
                            </Trigger>
                            <Trigger Property = "IsPressed" Value="True">
                                <Setter TargetName="controlLayout" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                <Setter TargetName="controlLayout" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>





    </Application.Resources>
</Application>
